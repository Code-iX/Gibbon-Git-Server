@using Gibbon.Git.Server.Configuration
@using Gibbon.Git.Server.Models
@using Microsoft.Extensions.Options
@inject IOptions<ApplicationSettings> AppSettings
@model Gibbon.Git.Server.Models.RepositoryDetailModel
@{
    Layout = "~/Views/Repository/_RepositoryLayout.cshtml";
    ViewBag.Title = Resources.Repository_Detail_Title;
}

@if (Model != null)
{
    <div class="pure-form pure-form-aligned detail">
        <fieldset>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Name)
                @Model.Name
                @switch (Model.Status)
                {
                    case RepositoryDetailStatus.Valid:
                        break;
                    case RepositoryDetailStatus.Missing:
                        <span class="status">(Missing)</span>
                        break;
                    case RepositoryDetailStatus.Unknown:
                    default:
                        <span class="status">(Status Unknown)</span>
                        break;
                }
            </div>
            <div class="pure-control-group">
                <label>@Resources.Repository_Detail_Location</label>
                <button class="pure-button copy-to-clip-button" data-clipboard-text="@Model.GitUrl"><i class="fa fa-copy"></i></button>
                <span class="git-url-text">@Model.GitUrl</span>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="pure-control-group">
                    <label>@Resources.Repository_Detail_Location_Personal</label>
                    <button class="pure-button copy-to-clip-button" data-clipboard-text="@Model.PersonalGitUrl"><i class="fa fa-copy"></i></button>
                    <span class="personal-url-text">@Model.PersonalGitUrl</span>
                </div>
            }

            <div class="pure-control-group">
                @Html.LabelFor(m => m.Group)
                @Model.Group
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Description)
                @Model.Description
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.AllowAnonymous)
                @if (Model.AllowAnonymous)
                {
                    @Resources.Repository_Detail_Yes
                }
                else
                {
                    @Resources.Repository_Detail_No
                }
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.AllowAnonymousPush)
                @Model.AllowAnonymousPush.ToString()
            </div>

            <div class="pure-control-group">
                @Html.LabelFor(m => m.LinksUseGlobal)
                @Html.CheckBoxFor(m => m.LinksUseGlobal, new { disabled = "disabled" })
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.LinksRegex)
                @Html.TextBoxFor(m => m.LinksRegex, new { @readonly = "readonly" })
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.LinksUrl)
                @Html.TextBoxFor(m => m.LinksUrl, new { @readonly = "readonly" })
            </div>

            @if (AppSettings.Value.IsPushAuditEnabled)
            {
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.AuditPushUser)
                    @if (Model.AuditPushUser)
                    {
                        @Resources.Repository_Detail_Yes
                    }
                    else
                    {
                        @Resources.Repository_Detail_No
                    }
                </div>
            }

            <div class="pure-control-group">
                @Html.LabelFor(m => m.Users)
                <span>
                    @foreach (var user in Model.Users)
                    {
                        @Html.ActionLink(user.DisplayName, "Detail", "Account", new { id = user.Id }, new { title = user.Username })
                        if (user != Model.Users.Last())
                        {
                            <text>, </text>
                        }
                    }
                </span>
            </div>

            <div class="pure-control-group">
                @Html.LabelFor(m => m.Administrators)
                <span>
                    @foreach (var admin in Model.Administrators)
                    {
                        @Html.ActionLink(admin.DisplayName, "Detail", "Account", new { id = admin.Id }, new { title = admin.Username })
                        if (admin != Model.Administrators.Last())
                        {
                            <text>, </text>
                        }
                    }
                </span>
            </div>

            <div class="pure-control-group">
                @Html.LabelFor(m => m.Teams)
                <span>
                    @foreach (var team in Model.Teams)
                    {
                        @Html.ActionLink(team.DisplayName, "Detail", "Team", new { id = team.Id }, null)
                        if (team != Model.Teams.Last())
                        {
                            <text>, </text>
                        }
                    }
                </span>
            </div>

            <div class="pure-controls">
                <a class="pure-button" href="@Url.Action("Index")"><i class="fa fa-long-arrow-left"></i> @Resources.Repository_Detail_Back</a>
                @if (Model.IsCurrentUserAdministrator)
                {
                    <a class="pure-button" href="@Url.Action("Edit", new { id = Model.Id })"><i class="fa fa-pencil-square-o"></i> @Resources.Repository_Detail_Edit</a>
                    <a class="pure-button" href="@Url.Action("Delete", new { id = Model.Id })"><i class="fa fa-trash-o"></i> @Resources.Repository_Detail_Delete</a>
                }
            </div>
        </fieldset>
    </div>
}

@section scripts
{
    <script>new Clipboard('.copy-to-clip-button');</script>
}
