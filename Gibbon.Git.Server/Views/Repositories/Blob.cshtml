@model RepositoryTreeDetailModel
@{
    Layout = "~/Views/Repositories/_RepositoriesLayout.cshtml";
    ViewBag.Title = Resources.Repository_Tree_Title;
}

@if (Model == null)
{
    @await Html.PartialAsync("~/Views/Shared/_ItemNotFound.cshtml")
    return;
}
@await Html.PartialAsync("_BranchSwitcher")
@await Html.PartialAsync("_AddressBar")

<div class="blob">

    <div class="controls">
        <span>@(Model.IsText ? Model.Text.Split(["\r\n", "\n"], StringSplitOptions.None).Length + " lines |" : "") @FileDisplayHandler.GetFileSizeString(Model.Data.LongLength)</span>
        <a href="@Url.Action("Blame", new { name = ViewBag.Name, version = Model.TreeName, path = Model.Path })">
            <i class="fa fa-comments"></i> @Resources.Repository_Tree_Blame
        </a>
        <a href="@Url.Action("History", new { name = ViewBag.Name, version = Model.TreeName, path = Model.Path })">
            <i class="fa fa-history"></i> @Resources.Repository_Tree_History
        </a>
        <a href="@Url.Action("Raw", new { name = ViewBag.Name, version = Model.TreeName, path = Model.Path, display = true })">
            <i class="fa fa-file-text"></i> @Resources.Repository_Tree_RawDisplay
        </a>
        <a href="@Url.Action("Raw", new { name = ViewBag.Name, version = Model.TreeName, path = Model.Path })">
            <i class="fa fa-download"></i> @Resources.Repository_Tree_Download
        </a>
    </div>

    @if (Model.IsImage)
    {
        <img class="fileImage" width="100%" alt="@Model.Name" src="@Url.Action("Raw", new { name = ViewBag.Name, version = Model.TreeName, path = Model.Path })"/>
    }
    else
    {
        if (Model.IsText && Model.IsMarkdown)
        {
            <div class="markdown">@Html.MarkdownToHtml(Url, Model.Text)</div>
        }
        else {if (Model.IsText)
            {
                <pre><code class="@Model.TextBrush">@Model.Text</code></pre>
            }
            else
            {
                <pre><code>@Resources.Repository_Tree_PreviewNotSupported</code></pre>
            }
        }
    }
</div>

@section scripts
{
    <script>hljs.configure({ tabReplace: '    ' }); hljs.initHighlightingOnLoad();</script>
}
