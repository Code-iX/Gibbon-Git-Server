@using Gibbon.Git.Server.Security
@using Microsoft.AspNetCore.Mvc.Rendering
@model Gibbon.Git.Server.Models.UserEditModel
@{
    ViewBag.Title = Resources.Account_Edit_Title;
}
@if (Model == null)
{
    @await Html.PartialAsync("~/Views/Shared/_ItemNotFound.cshtml")
}
else
{
    <h1>@Model.Username</h1>

    @if (ViewBag.UpdateSuccess != null && ViewBag.UpdateSuccess)
    {
        <div class="summary-success">
            <p>@Resources.Account_Edit_UpdateSuccess</p>
        </div>
    }

    @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "pure-form pure-form-aligned" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false, Resources.Account_Edit_Unsuccessfull)
        @Html.HiddenFor(m => m.Id)

        <fieldset>
            <div class="pure-control-group">
                @Html.RequiredLabelFor(m => m.Username)
                @Html.TextBoxFor(m => m.Username)
                @Html.ValidationMessageFor(m => m.Username)
            </div>
            <div class="pure-control-group">
                @Html.RequiredLabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name, new { autofocus = "" })
                @Html.ValidationMessageFor(m => m.Name)
            </div>
            <div class="pure-control-group">
                @Html.RequiredLabelFor(m => m.Surname)
                @Html.TextBoxFor(m => m.Surname)
                @Html.ValidationMessageFor(m => m.Surname)
            </div>
            <div class="pure-control-group">
                @Html.RequiredLabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { @class = "medium" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            @if (User.IsInRole(Definitions.Roles.Administrator))
            {
                <div class="pure-control-group checkboxlist">
                    @Html.LabelFor(m => m.Roles)
                    <span>
                        @foreach (var role in Model.Roles)
                        {
                            <label>
                                <input type="checkbox" name="PostedSelectedRoles" value="@role"
                                @(Model.SelectedRoles.Contains(role) ? "checked" : "") />
                                @role
                            </label>
                        }
                    </span>
                    <i class="fa fa-info-circle" title="@Resources.Account_Edit_RolesHint"></i>
                </div>
            }
            <div class="pure-controls">
                @if (User.IsInRole(Definitions.Roles.Administrator))
                {
                    <a class="pure-button" href="@Url.Action("Index")"><i class="fa fa-long-arrow-left"></i> @Resources.Account_Edit_Back</a>
                }
                <button type="submit" class="pure-button pure-button-primary"><i class="fa fa-save"></i> @Resources.Account_Edit_Submit</button>
            </div>
        </fieldset>
    }
}
