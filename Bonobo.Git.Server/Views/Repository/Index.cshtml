@using Bonobo.Git.Server.Extensions
@model IEnumerable<RepositoryDetailModel>
@{
    ViewBag.Title = Resources.Repository_Index_Title;
}

@functions
{
    string GetNameToDisplay(string name, RepositoryDetailStatus status)
    {
        switch (status)
        {
            case RepositoryDetailStatus.Valid:
                return name;

            case RepositoryDetailStatus.Missing:
                return name + " (Missing)";

            case RepositoryDetailStatus.Unknown:
            default:
                return name + " (Status Unknown)";
        }
    }
}

<div class="pure-g">
    <div class="pure-u-3-5">
        <h1>@Resources.Repository_Index_Title</h1>
    </div>
    <div class="pure-u-2-5 add">
        @if (User.IsInRole(Definitions.Roles.Administrator) || UserConfiguration.Current.AllowUserRepositoryCreation)
        {
            <a class="pure-button pure-button-primary" href="@Url.Action("Create")"><i class="fa fa-plus-circle"></i> @Resources.Repository_Index_CreateNew</a>
        }
    </div>
</div>


@if (TempData["CreateSuccess"] != null && (bool)TempData["CreateSuccess"])
{
    <div class="summary-success">
        <p>@Resources.Repository_Create_Success</p>
    </div>
}
@if (TempData["DeleteSuccess"] != null && (bool)TempData["DeleteSuccess"])
{
    <div class="summary-success">
        <p>@Resources.Repository_Delete_Success</p>
    </div>
}


@{
    var permitted = new WebGrid(source: Model, defaultSort: "Name", rowsPerPage: 15);
    @permitted.GetHtml(
    tableStyle: "pure-table repositories",
    columns: permitted.Columns(
             permitted.Column("Name", header: typeof(RepositoryDetailModel).GetDisplayValue("Name"), format: (item) => Html.ActionLink(GetNameToDisplay((string)item.Name, (RepositoryDetailStatus)item.Status), "Detail", new { id = item.Name }, new { @class = "repository" })),
             permitted.Column("Description", typeof(RepositoryDetailModel).GetDisplayValue("Description"), format: (item) => ((item.Description != null && ((string)item.Description).Length > 100)) ? ((string)item.Description).Substring(0, 100) + " ... " : item.Description),
             permitted.Column(format: (item) => Html.ActionLink(" ", "Edit", new { id = item.Name }, new { @class = "edit", title = Resources.Account_Detail_Edit }), style: "action"),
             permitted.Column(format: (item) => Html.ActionLink(" ", "Delete", new { id = item.Name }, new { @class = "delete", title = Resources.Account_Detail_Delete }), style: "action")
    ))
}
