@model RepositoryDetailModel
@{
    ViewBag.Title = Resources.Repository_Clone_Title;
}
<h1>@Resources.Repository_Clone_Title</h1>

@using (Html.BeginForm("Clone", "Repository", new { id = ViewBag.ID }, FormMethod.Post, new { @class = "pure-form pure-form-aligned" }))
{    
    @Html.ValidationSummary(false, Resources.Repository_Clone_Fail)
    
    <fieldset>
        <div class="pure-control-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { autofocus = "" })<em>*</em>
            @Html.ValidationMessageFor(m => m.Name)
        </div>
        <div class="pure-control-group">
            @Html.LabelFor(m => m.Group)
            @Html.TextBoxFor(m => m.Group, new { @class = "medium" })
        </div>
        <div class="pure-control-group">
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { @class = "medium" })
        </div>
        <div class="pure-control-group">
            @Html.LabelFor(m => m.AllowAnonymous)
            @Html.CheckBoxFor(m => m.AllowAnonymous)
            <i class="fa fa-info-circle" title="@Resources.Repository_AllowAnonymousHint"></i>
        </div>
        <div class="pure-control-group checkboxlist">
            @Html.LabelFor(m => m.Users)
            @{
                var users = (from user in ViewData["AvailableUsers"] as string[]
                             orderby user
                             select new SelectListItem { Value = user, Text = user }).ToArray();
            }

            @Html.CheckboxListFor(m => m.Users, users)
            <i class="fa fa-info-circle" title="@Resources.Repository_UsersHint"></i>
        </div>

        <div class="pure-control-group checkboxlist">
            @Html.LabelFor(m => m.Administrators)
            @{
                var administrators = (from user in ViewData["AvailableAdministrators"] as string[]
                                      orderby user
                                      select new SelectListItem { Value = user, Text = user }).ToArray();
            }

            @Html.CheckboxListFor(m => m.Administrators, administrators)
            @Html.ValidationMessageFor(m => m.Administrators)
            <i class="fa fa-info-circle" title="@Resources.Repository_AdministratorsHint"></i>
        </div>



        <div class="pure-control-group checkboxlist">
            @Html.LabelFor(m => m.Teams)
            @{
                var teams = (from user in ViewData["AvailableTeams"] as string[]
                             orderby user
                             select new SelectListItem { Value = user, Text = user }).ToArray();
            }

            @Html.CheckboxListFor(m => m.Teams, teams)
            <i class="fa fa-info-circle" title="@Resources.Repository_TeamsHint"></i>
        </div>



        <div class="pure-controls">
            <a class="pure-button" href="@Url.Action("Index")"><i class="fa fa-long-arrow-left"></i> @Resources.Repository_Back</a>
            <button type="submit" class="pure-button pure-button-primary"><i class="fa fa-copy"></i> @Resources.Repository_Clone_Submit</button>
        </div>
    </fieldset>
}
